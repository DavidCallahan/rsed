{\rtf1\ansi\ansicpg1252\cocoartf1347\cocoasubrtf570
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww9000\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 The set of variables are a path to allow access to the interpreter and its state\
	$LINEIN  -- line number in input buffer\
	$LINEOUT -- similar for output \
	$TMPDIR -- a temporary directionry\
	$LINE  -- input line buffer (no newline)\
\
The goal is that $0, $1, ...  are based on the most recent regex in the usual way\
\
Should output buffers not associated with files be backed by files if they get big? \
\
"error" writes to stderr and will cause a non-zero exit code\
\
input stdin     (pickup where we left off)\
output stdout \
output stderr \
\
rewind   (restart at the beginning of a buffer that is not stdin, stdout, stderr)\
  (is not not needed, can we close and reopen a file?)\
\
close  (close current output stream, return to stdout)\
\
do we need a "break" statement for loops?\
do we need a "stop" statement for the script?\
	}